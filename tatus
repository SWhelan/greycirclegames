[1mdiff --git a/src/main/java/greycirclegames/ArtificialPlayer.java b/src/main/java/greycirclegames/ArtificialPlayer.java[m
[1mindex 4f140f3..80bd855 100644[m
[1m--- a/src/main/java/greycirclegames/ArtificialPlayer.java[m
[1m+++ b/src/main/java/greycirclegames/ArtificialPlayer.java[m
[36m@@ -28,16 +28,6 @@[m [mpublic abstract class ArtificialPlayer extends ReflectionDBObject implements Pla[m
 	public abstract Move createMove(Game<? extends Move, ? extends  GameState, ? extends ArtificialPlayer> game);[m
 [m
 	@Override[m
[31m-	public void updateWin(String game) {[m
[31m-		// Do nothing as it is a computer player[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void updateLoss(String game) {[m
[31m-		// Do nothing as it is a computer player[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
 	public int hashCode() {[m
 		final int prime = 31;[m
 		int result = super.hashCode();[m
[1mdiff --git a/src/main/java/greycirclegames/Player.java b/src/main/java/greycirclegames/Player.java[m
[1mindex db5d03e..1c4d406 100644[m
[1m--- a/src/main/java/greycirclegames/Player.java[m
[1m+++ b/src/main/java/greycirclegames/Player.java[m
[36m@@ -28,17 +28,4 @@[m [mpublic interface Player {[m
 	 */[m
 	public String getUsername();[m
 	[m
[31m-	/**[m
[31m-	 * On the event of winning a game, call this function[m
[31m-	 * to reflect that win in the database.[m
[31m-	 * @param game	The string identifier of the game.[m
[31m-	 */[m
[31m-	public void updateWin(String game);[m
[31m-	[m
[31m-	/**[m
[31m-	 * On the event of losing a game, call this function[m
[31m-	 * to reflect that loss in the database.[m
[31m-	 * @param game	The string identifier of the game.[m
[31m-	 */[m
[31m-	public void updateLoss(String game);[m
 }[m
\ No newline at end of file[m
[1mdiff --git a/src/main/java/greycirclegames/User.java b/src/main/java/greycirclegames/User.java[m
[1mindex 9314a0e..73acf5c 100644[m
[1m--- a/src/main/java/greycirclegames/User.java[m
[1m+++ b/src/main/java/greycirclegames/User.java[m
[36m@@ -4,6 +4,7 @@[m [mimport java.math.BigInteger;[m
 import java.security.MessageDigest;[m
 import java.security.NoSuchAlgorithmException;[m
 import java.security.SecureRandom;[m
[32m+[m[32mimport java.util.ArrayList;[m
 import java.util.LinkedList;[m
 import java.util.List;[m
 [m
[36m@@ -23,6 +24,7 @@[m [mpublic class User extends ReflectionDBObject implements Player {[m
 	private String email;[m
 	// List of ids of friends[m
 	private BasicDBList friends;[m
[32m+[m	[32mprivate List<Notification> notifications = new ArrayList<Notification>();[m
 	private boolean emailForNewFriend;[m
 	private boolean emailForNewGame;[m
 	private boolean emailForTurn;[m
[36m@@ -55,95 +57,84 @@[m [mpublic class User extends ReflectionDBObject implements Player {[m
 				(String) obj.get("Salt"), (String) obj.get("Email"), (BasicDBList) obj.get("Friends"),[m
 				(boolean) obj.get("EmailForNewFriend"), (boolean) obj.get("EmailForNewGame"),[m
 				(boolean) obj.get("EmailForTurn"), (boolean) obj.get("EmailForGameOver"));[m
[32m+[m		[32m//BasicDBList dbNotifications = (BasicDBList) obj.get("Notifications");[m
[32m+[m		[32m//for(Object dbNotification : dbNotifications){[m
[32m+[m			[32m//this.notifications.add(new Notification((BasicDBObject) dbNotification));[m
[32m+[m		[32m//}[m
 	}[m
 [m
 	public Integer get_id() {[m
 		return _id;[m
 	}[m
[31m-[m
 	public void set_id(int _id) {[m
 		this._id = _id;[m
 	}[m
[31m-[m
 	public String getUsername() {[m
 		return username;[m
 	}[m
[31m-[m
 	public void setUsername(String username) {[m
 		this.username = username;[m
 	}[m
[31m-[m
 	public String getPassword() {[m
 		return password;[m
 	}[m
[31m-[m
 	public void setPassword(String password) {[m
 		this.password = password;[m
 	}[m
[31m-[m
 	public String getSalt() {[m
 		return salt;[m
 	}[m
[31m-[m
 	public void setSalt(String salt) {[m
 		this.salt = salt;[m
 	}[m
[31m-[m
 	public String getEmail() {[m
 		return email;[m
 	}[m
[31m-[m
 	public void setEmail(String email) {[m
 		this.email = email;[m
 	}[m
[31m-[m
 	public BasicDBList getFriends() {[m
 		return friends;[m
 	}[m
[31m-[m
 	public void setFriends(BasicDBList friends) {[m
 		this.friends = friends;[m
 	}[m
[31m-[m
 	public void addFriend(int friendID) {[m
 		this.friends.add(friendID);[m
 	}[m
[31m-[m
 	public void destroyFriendship(Integer friendID) {[m
 		this.friends.remove(friendID);[m
 	}[m
[31m-[m
 	public boolean getEmailForNewFriend() {[m
 		return emailForNewFriend;[m
 	}[m
[31m-[m
 	public void setEmailForNewFriend(boolean emailForNewFriend) {[m
 		this.emailForNewFriend = emailForNewFriend;[m
 	}[m
[31m-[m
 	public boolean getEmailForNewGame() {[m
 		return emailForNewGame;[m
 	}[m
[31m-[m
 	public void setEmailForNewGame(boolean emailForNewGame) {[m
 		this.emailForNewGame = emailForNewGame;[m
 	}[m
[31m-[m
 	public boolean getEmailForTurn() {[m
 		return emailForTurn;[m
 	}[m
[31m-[m
 	public void setEmailForTurn(boolean emailForTurn) {[m
 		this.emailForTurn = emailForTurn;[m
 	}[m
[31m-[m
 	public boolean getEmailForGameOver() {[m
 		return emailForGameOver;[m
 	}[m
[31m-[m
 	public void setEmailForGameOver(boolean emailForGameOver) {[m
 		this.emailForGameOver = emailForGameOver;[m
 	}[m
[32m+[m	[32mpublic List<Notification> getNotifications() {[m
[32m+[m		[32mreturn notifications;[m
[32m+[m	[32m}[m
[32m+[m	[32mpublic void setNotifications(List<Notification> notifications) {[m
[32m+[m		[32mthis.notifications = notifications;[m
[32m+[m	[32m}[m
 [m
 	@Override[m
 	public int hashCode() {[m
[36m@@ -191,22 +182,6 @@[m [mpublic class User extends ReflectionDBObject implements Player {[m
 		return true;[m
 	}[m
 [m
[31m-	public boolean sendFriendRequest(User user) {[m
[31m-		return false;[m
[31m-	}[m
[31m-[m
[31m-	public boolean acceptFriendRequest(User user) {[m
[31m-		return false;[m
[31m-	}[m
[31m-[m
[31m-	public static User make(String username, String email, String password) {[m
[31m-		return null;[m
[31m-	}[m
[31m-[m
[31m-	public static User login(String username, String email, String password) {[m
[31m-		return null;[m
[31m-	}[m
[31m-[m
 	public static String generateSalt() {[m
 		SecureRandom random = new SecureRandom();[m
 		return new BigInteger(NUM_BITS, random).toString(RADIX);[m
[36m@@ -228,16 +203,6 @@[m [mpublic class User extends ReflectionDBObject implements Player {[m
 		return this.password.equals(hashPassword(this.salt, password));[m
 	}[m
 [m
[31m-	@Override[m
[31m-	public void updateWin(String game) {[m
[31m-[m
[31m-	}[m
[31m-[m
[31m-	@Override[m
[31m-	public void updateLoss(String game) {[m
[31m-[m
[31m-	}[m
[31m-[m
 	public List<User> getFriendsList() {[m
 		List<User> toReturn = new LinkedList<User>();[m
 		for (Object o : friends) {[m
[36m@@ -245,7 +210,6 @@[m [mpublic class User extends ReflectionDBObject implements Player {[m
 			User f = DBHandler.getUser(friend_id);[m
 			toReturn.add(f);[m
 		}[m
[31m-[m
 		return toReturn;[m
 	}[m
 }[m
